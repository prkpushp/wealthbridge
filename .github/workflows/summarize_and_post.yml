name: POST from URL

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL of the article to summarize and post'
        required: true
        type: string
      title:
        description: 'Optional title override'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          python3 -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Extract article content (CNBC only for now)
        env:
          URL: ${{ github.event.inputs.url }}
        run: |
          python scripts/fetch_page.py "$URL"

      - name: Summarize article with Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          SOURCE_URL: ${{ github.event.inputs.url }}
        run: |
          python scripts/summarize_with_gemini.py

      - name: Extract page title from HTML
        id: extract_title
        run: |
          url="${{ github.event.inputs.url }}"
          html=$(curl -s "$url")
          title=$(echo "$html" | grep -oP '(?<=<title>).*?(?=</title>)' | sed 's/|.*//;s/- CNBC//;s/â€“.*//;s/^\s*//;s/\s*$//')
          if [ -z "${{ github.event.inputs.title }}" ]; then
            echo "TITLE=$title" >> $GITHUB_ENV
          else
            echo "TITLE=${{ github.event.inputs.title }}" >> $GITHUB_ENV
          fi

      - name: Publish to WordPress
        env:
          WP_URL: ${{ secrets.WP_URL }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_APPLICATION_PASSWORD: ${{ secrets.WP_APPLICATION_PASSWORD }}
          TITLE: ${{ env.TITLE }}
        run: |
          AUTH=$(echo -n "$WP_USER:$WP_APPLICATION_PASSWORD" | base64)
          CONTENT=$(cat summary.txt)

          curl -X POST "$WP_URL/wp-json/wp/v2/posts" \
            -H "Authorization: Basic $AUTH" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg title "$TITLE" \
              --arg content "$CONTENT" \
              '{title: $title, content: $content, status: "publish"}')"
